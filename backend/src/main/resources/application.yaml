# Main application configuration
spring:
  application:
    name: SafeNet

  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}

  # Database configuration
  datasource:
    url: ${DATABASE_URL}
    username: ${DATABASE_USERNAME}
    password: ${DATABASE_PASSWORD}
    driver-class-name: org.postgresql.Driver

    # HikariCP connection pool (production-ready defaults)
    hikari:
      maximum-pool-size: ${MAXIMUM_POOL_SIZE}
      minimum-idle: ${MINIMUM_IDLE}
      connection-timeout: ${CONNECTION_TIMEOUT}
      idle-timeout: ${IDLE_TIMEOUT}
      max-lifetime: ${MAX_LIFETIME}

  # JPA/Hibernate configuration
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: validate  # Production: never use 'update' or 'create-drop'
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true
    show-sql: false  # Enable in dev profile

  # OAuth2 Resource Server configuration
  security:
    oauth2:
      client:
        registration:
          keycloak:
            client-id: ${KEYCLOAK_CLIENT_ID}
            client-secret: ${KEYCLOAK_CLIENT_SECRET}
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:${SERVER_PORT}/swagger-ui/oauth2-redirect.html
            scope: openid,profile,email
        provider:
          keycloak:
            issuer-uri: ${KEYCLOAK_ISSUER_URI}
            authorization-uri: ${KEYCLOAK_ISSUER_URI}/protocol/openid-connect/auth
            token-uri: ${KEYCLOAK_ISSUER_URI}/protocol/openid-connect/token
            user-info-uri: ${KEYCLOAK_ISSUER_URI}/protocol/openid-connect/userinfo
            jwk-set-uri: ${KEYCLOAK_ISSUER_URI}/protocol/openid-connect/certs
            user-name-attribute: preferred_username
      resourceserver:
        opaquetoken:
          introspection-uri: ${KEYCLOAK_ISSUER_URI}/protocol/openid-connect/token/introspect
          client-id: ${KEYCLOAK_CLIENT_ID}
          client-secret: ${KEYCLOAK_CLIENT_SECRET}

# Server configuration
server:
  port: ${SERVER_PORT}
  shutdown: graceful  # Graceful shutdown for Kubernetes

# Actuator configuration
management:
  endpoints:
    web:
      exposure:
        include: "health,info,metrics,prometheus"
      base-path: /actuator
  endpoint:
    health:
      show-details: when_authorized
  metrics:
    tags:
      application: ${spring.application.name}

# OpenAPI documentation
springdoc:
  swagger-ui:
    oauth:
      use-pkce-with-authorization-code-grant: true
      use-basic-authentication-with-access-code-grant: true

    # UI Configuration
    persist-authorization: true

safenet:
  # OpenAPI documentation
  springdoc:
    api-docs:
      title: ${spring.application.name}
      description: SafePath ist eine mobile/webbasierte App, die in Katastrophenfällen sichere Evakuierungsrouten anzeigt, Statusmeldungen ermöglicht und die Koordination von Betroffenen und Rettungskräften unterstützt.
      app-version: 1.0
      external-docs:
        - description: "OpenID Provider Configuration"
          url: "http://localhost:8081/realms/safenet/.well-known/openid-configuration"

    swagger-ui:
      oauth:
        authorization-url: ${KEYCLOAK_ISSUER_URI}/protocol/openid-connect/auth
        token-url: ${KEYCLOAK_ISSUER_URI}/protocol/openid-connect/token

  # Security configuration
  security:
    https-only: false
    cors-allowed-origins:
      - "http://localhost:8080"
      - "http://localhost:8081"
    jwt:
      issuer-uri: ${KEYCLOAK_ISSUER_URI}
      audience: "safenet-backend"
      clock-skew: 60               # Sekunden (Default 60)

  # Keycloak configuration
  keycloak:
    webhook:
      # Basic Authentication configuration
      username: ${WEBHOOK_HTTP_AUTH_USERNAME}
      password: ${WEBHOOK_HTTP_AUTH_PASSWORD}

# Logging configuration
logging:
  level:
    root: INFO
    com.hackathon.safenet: DEBUG
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE