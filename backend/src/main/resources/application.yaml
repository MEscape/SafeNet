# Main application configuration
spring:
  application:
    name: SafeNet

  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}

  # Database configuration
  datasource:
    url: ${DATABASE_URL}
    username: ${DATABASE_USERNAME}
    password: ${DATABASE_PASSWORD}
    driver-class-name: org.postgresql.Driver

    # HikariCP connection pool (production-ready defaults)
    hikari:
      maximum-pool-size: ${MAXIMUM_POOL_SIZE}
      minimum-idle: ${MINIMUM_IDLE}
      connection-timeout: ${CONNECTION_TIMEOUT}
      idle-timeout: ${IDLE_TIMEOUT}
      max-lifetime: ${MAX_LIFETIME}

  # JPA/Hibernate configuration
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: validate  # Production: never use 'update' or 'create-drop'
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true
    show-sql: false  # Enable in dev profile

  # OAuth2 Resource Server configuration
  security:
    oauth2:
      resourceserver:
        jwt:
          # Keycloak issuer URI - fetches JWKS automatically
          issuer-uri: ${KEYCLOAK_ISSUER_URI}

# Server configuration
server:
  port: ${SERVER_PORT}
  shutdown: graceful  # Graceful shutdown for Kubernetes

# Actuator configuration
management:
  endpoints:
    web:
      exposure:
        include: "health,info,metrics,prometheus"
      base-path: /actuator
  endpoint:
    health:
      show-details: when_authorized
  metrics:
    tags:
      application: ${spring.application.name}

# OpenAPI documentation
springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    operations-sorter: method
    tags-sorter: alpha

safenet:
  # App configuration
  app:
    name: ${spring.application.name}
    version: "1.0.0"
    description: "SafePath ist eine mobile/webbasierte App, die in Katastrophenfällen sichere Evakuierungsrouten anzeigt, Statusmeldungen ermöglicht und die Koordination von Betroffenen und Rettungskräften unterstützt."
    port: ${SERVER_PORT}
    production-server-url: "http://localhost:8080"
    contact:
      name: "${spring.application.name} Team"
      email: "safenet.hackathon26@gmail.com"
      url: "https://github.com/MEscape/SafeNet"
    license:
      name: "Apache 2.0"
      url: "https://www.apache.org/licenses/LICENSE-2.0.html"

  # Security configuration
  security:
    https-only: false
    cors-allowed-origins:
      - "http://localhost:8081"
    jwt:
      issuer-uri: "http://localhost:8080/realms/myrealm"
      audience: "safenet-backend"
      clock-skew: 60               # Sekunden (Default 60)

  # Keycloak configuration
  keycloak:
    webhook:
      # Basic Authentication configuration
      username: ${WEBHOOK_HTTP_AUTH_USERNAME}
      password: ${WEBHOOK_HTTP_AUTH_PASSWORD}

# Logging configuration
logging:
  level:
    root: INFO
    com.hackathon.safenet: DEBUG
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE