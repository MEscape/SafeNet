services:
  # PostgreSQL Database
  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_DB: ${POSTGRES_RESOURCE_DB}
      POSTGRES_KEYCLOAK_DB: ${POSTGRES_KEYCLOAK_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init-db.sh:/docker-entrypoint-initdb.d/init.sh:ro

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_KEYCLOAK_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - safe-net-network

  # Keycloak Identity Provider
  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak
    environment:
      # Admin credentials
      KC_BOOTSTRAP_ADMIN_USERNAME: ${KEYCLOAK_ADMIN}
      KC_BOOTSTRAP_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}

      # Database configuration (Keycloak uses Postgres)
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/${POSTGRES_KEYCLOAK_DB}
      KC_DB_USERNAME: ${POSTGRES_USER}
      KC_DB_PASSWORD: ${POSTGRES_PASSWORD}

      # Development mode settings
      KC_HTTP_ENABLED: "true"
      KC_HOSTNAME_STRICT: "false"
      KC_HOSTNAME_STRICT_HTTPS: "false"

      # Performance tuning
      KC_HEALTH_ENABLED: "true"
      KC_METRICS_ENABLED: "true"

      # HTTP Provider Configuration for Webhook Plugin
      WEBHOOK_HTTP_BASE_PATH: "http://host.docker.internal:8080/api/v1/hooks/keycloak/user-event"
      WEBHOOK_HTTP_AUTH_USERNAME: ${WEBHOOK_HTTP_AUTH_USERNAME}
      WEBHOOK_HTTP_AUTH_PASSWORD: ${WEBHOOK_HTTP_AUTH_PASSWORD}

    entrypoint: /bin/sh
    command:
      - -c
      - |
        set -ex
        # Copy all plugin JARs from the mounted volume into Keycloak's providers folder
        cp /tmp/plugins/*.jar /opt/keycloak/providers
        /opt/keycloak/bin/kc.sh start-dev --import-realm
    ports:
      - "8081:8080"
    volumes:
      - ./docker/keycloak/realm-export.json:/opt/keycloak/data/import/realm.json:ro
      - ./docker/keycloak/themes/safenet:/opt/keycloak/themes/safenet:ro
      - ./docker/keycloak/plugins:/tmp/plugins:ro
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "exec 3<>/dev/tcp/localhost/8080 && echo -e 'GET /health/ready HTTP/1.1\\r\\nHost: localhost\\r\\nConnection: close\\r\\n\\r\\n' >&3 && cat <&3 | grep -q '200 OK'"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 90s
    networks:
      - safe-net-network

  # Optional: PgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_RESOURCE_DB: ${POSTGRES_RESOURCE_DB}
      POSTGRES_KEYCLOAK_DB: ${POSTGRES_KEYCLOAK_DB}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./docker/pgadmin/init-servers.sh:/init-servers.sh
    entrypoint: [ "/bin/bash", "/init-servers.sh" ]
    depends_on:
      - postgres
    networks:
      - safe-net-network
    profiles:
      - tools  # Only start with: docker-compose --profile tools up

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  safe-net-network:
    driver: bridge